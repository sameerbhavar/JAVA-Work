Q4) What are the different states of a thread, or what is thread lifecycle?

New Thread: 
	When a new thread is created, it is in the new state. 
	The thread has not yet started to run when the thread is in this state. 
	When a thread lies in the new state, 
	its code is yet to be run and hasn’t started to execute.
Runnable State:
	A thread that is ready to run is moved to a runnable state. 
	In this state, a thread might actually be running or it might be ready to run at any instant of time. 
	It is the responsibility of the thread scheduler to give the thread, time to run.
Blocked/Waiting state:
   When a thread is temporarily inactive, then it’s in one of the following states: 
   Blocked
   Waiting	
Timed Waiting: 
	 A thread lies in a timed waiting state when it calls a method with a time-out 
	 parameter. A thread lies in this state until the timeout is completed or until
	 a notification is received. For example, when a thread calls sleep or a 
	 conditional wait, it is moved to a timed waiting state.
Terminated State:
	 A thread terminates because of either of the following reasons	   
	 1.Because it exits normally. This happens when the code of the 
	 thread has been entirely executed by the program.
	 
     2.Because there occurred some unusual erroneous event, like segmentation fault
     or an unhandled exception.
   
		
